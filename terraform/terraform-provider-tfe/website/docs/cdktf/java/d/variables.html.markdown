---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_variables"
description: |-
  Get information on a workspace variables.
---

# Data Source: tfe_variables

This data source is used to retrieve all variables defined in a specified workspace

## Example Usage

For workspace variables:

```java
import software.constructs.*;
import com.hashicorp.cdktf.*;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import gen.providers.tfe.dataTfeWorkspace.*;
import gen.providers.tfe.dataTfeVariables.*;
public class MyConvertedCode extends TerraformStack {
    public MyConvertedCode(Construct scope, String name) {
        super(scope, name);
        DataTfeWorkspace dataTfeWorkspaceTest = new DataTfeWorkspace(this, "test", new DataTfeWorkspaceConfig()
                .name("my-workspace-name")
                .organization("my-org-name")
                );
        DataTfeVariables dataTfeVariablesTest = new DataTfeVariables(this, "test_1", new DataTfeVariablesConfig()
                .workspaceId(Token.asString(dataTfeWorkspaceTest.getId()))
                );
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        dataTfeVariablesTest.overrideLogicalId("test");
    }
}
```

For variable set variables:

```java
import software.constructs.*;
import com.hashicorp.cdktf.*;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import gen.providers.tfe.dataTfeVariableSet.*;
import gen.providers.tfe.dataTfeVariables.*;
public class MyConvertedCode extends TerraformStack {
    public MyConvertedCode(Construct scope, String name) {
        super(scope, name);
        DataTfeVariableSet dataTfeVariableSetTest =
        new DataTfeVariableSet(this, "test", new DataTfeVariableSetConfig()
                .name("my-variable-set-name")
                .organization("my-org-name")
                );
        DataTfeVariables dataTfeVariablesTest = new DataTfeVariables(this, "test_1", new DataTfeVariablesConfig()
                .variableSetId(Token.asString(dataTfeVariableSetTest.getId()))
                );
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        dataTfeVariablesTest.overrideLogicalId("test");
    }
}
```

## Argument Reference

One of following arguments are required:

* `workspaceId` - ID of the workspace.
* `variableSetId` - ID of the workspace.

## Attributes Reference

* `variables` - List containing all terraform and environment variables configured on the workspace
* `terraform` - List containing terraform variables configured on the workspace
* `env` - List containing environment variables configured on the workspace

The `variables, terraform and env` blocks contains:

* `id` - The variable Id
* `name` - The variable Key name
* `value` -  The variable value. If the variable is sensitive this value will be empty.
* `category` -  The category of the variable (terraform or environment)
* `sensitive` - If the variable is marked as sensitive or not
* `hcl` - If the variable is marked as HCL or not

<!-- cache-key: cdktf-0.17.0-pre.15 input-635190fbcaed3640f0f12f181a3eae6abefebcbcad7f5806bfb392bb4097eaef -->