---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_team_token"
description: |-
  Generates a new team token and overrides existing token if one exists.
---


<!-- Please do not edit this file, it is generated. -->
# tfe_team_token

Generates a new team token and overrides existing token if one exists.

## Example Usage

Basic usage:

```java
import software.constructs.*;
import com.hashicorp.cdktf.*;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import gen.providers.tfe.team.*;
import gen.providers.tfe.teamToken.*;
public class MyConvertedCode extends TerraformStack {
    public MyConvertedCode(Construct scope, String name) {
        super(scope, name);
        Team tfeTeamTest = new Team(this, "test", new TeamConfig()
                .name("my-team-name")
                .organization("my-org-name")
                );
        TeamToken tfeTeamTokenTest = new TeamToken(this, "test_1", new TeamTokenConfig()
                .teamId(Token.asString(tfeTeamTest.getId()))
                );
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeTeamTokenTest.overrideLogicalId("test");
    }
}
```

## Argument Reference

The following arguments are supported:

* `teamId` - (Required) ID of the team.
* `forceRegenerate` - (Optional) If set to `true`, a new token will be
  generated even if a token already exists. This will invalidate the existing
  token!
* `expiredAt` - (Optional) The token's expiration date. The expiration date must be a date/time string in RFC3339 
format (e.g., "2024-12-31T23:59:59Z"). If no expiration date is supplied, the expiration date will default to null and 
never expire.

## Example Usage

When a token has an expiry:

```java
import software.constructs.*;
import com.hashicorp.cdktf.*;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import gen.providers.tfe.team.*;
import gen.providers.tfe.teamToken.*;
import gen.providers.time.rotating.*;
public class MyConvertedCode extends TerraformStack {
    public MyConvertedCode(Construct scope, String name) {
        super(scope, name);
        /*The following providers are missing schema information and might need manual adjustments to synthesize correctly: time.
            For a more precise conversion please use the --provider flag in convert.*/
        Team tfeTeamTest = new Team(this, "test", new TeamConfig()
                .name("my-team-name")
                .organization("my-org-name")
                );
        Object timeRotatingExample = Rotating.Builder.create(this, "example")
                .rotation_days(30)
                .build();
        TeamToken tfeTeamTokenTest = new TeamToken(this, "test_2", new TeamTokenConfig()
                .expiredAt(Token.asString(timeRotatingExample.getRotationRfc3339()))
                .teamId(Token.asString(tfeTeamTest.getId()))
                );
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeTeamTokenTest.overrideLogicalId("test");
    }
}
```

## Attributes Reference

* `id` - The ID of the token.
* `token` - The generated token.

## Import

Team tokens can be imported; use `<TEAM ID>` as the import ID. For example:

```shell
terraform import tfe_team_token.test team-47qC3LmA47piVan7
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-81ad21e38f7d39a442070952309741b9fc85572d00ada484fd6850ada6613dff -->