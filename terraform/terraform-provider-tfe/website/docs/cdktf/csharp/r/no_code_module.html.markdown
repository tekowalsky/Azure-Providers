---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_no_code_module"
description: |-
  Manages no code settings for registry modules
---


<!-- Please do not edit this file, it is generated. -->
# tfe_no_code_module

Creates, updates and destroys no-code module for registry modules.

## Example Usage

Basic usage:

```csharp
using Constructs;
using HashiCorp.Cdktf;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
using Gen.Providers.Tfe;
class MyConvertedCode : TerraformStack
{
    public MyConvertedCode(Construct scope, string name) : base(scope, name)
    {
        var tfeOrganizationFoobar = new Organization.Organization(this, "foobar", new OrganizationConfig {
            Email = "admin@company.com",
            Name = "my-org-name"
        });
        var tfeRegistryModuleFoobar = new RegistryModule.RegistryModule(this, "foobar_1", new RegistryModuleConfig {
            ModuleProvider = "my_provider",
            Name = "test_module",
            Organization = Token.AsString(tfeOrganizationFoobar.Id)
        });
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeRegistryModuleFoobar.OverrideLogicalId("foobar");
        var tfeNoCodeModuleFoobar = new NoCodeModule.NoCodeModule(this, "foobar_2", new NoCodeModuleConfig {
            Organization = Token.AsString(tfeOrganizationFoobar.Id),
            RegistryModule = Token.AsString(tfeRegistryModuleFoobar.Id)
        });
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeNoCodeModuleFoobar.OverrideLogicalId("foobar");
    }
}
```

Creating a no-code module with variable options:

```csharp
using Constructs;
using HashiCorp.Cdktf;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
using Gen.Providers.Tfe;
class MyConvertedCode : TerraformStack
{
    public MyConvertedCode(Construct scope, string name) : base(scope, name)
    {
        var tfeOrganizationFoobar = new Organization.Organization(this, "foobar", new OrganizationConfig {
            Email = "admin@company.com",
            Name = "my-org-name"
        });
        var tfeRegistryModuleFoobar = new RegistryModule.RegistryModule(this, "foobar_1", new RegistryModuleConfig {
            ModuleProvider = "my_provider",
            Name = "test_module",
            Organization = Token.AsString(tfeOrganizationFoobar.Id)
        });
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeRegistryModuleFoobar.OverrideLogicalId("foobar");
        var tfeNoCodeModuleFoobar = new NoCodeModule.NoCodeModule(this, "foobar_2", new NoCodeModuleConfig {
            Organization = Token.AsString(tfeOrganizationFoobar.Id),
            RegistryModule = Token.AsString(tfeRegistryModuleFoobar.Id),
            VariableOptions = new [] { new NoCodeModuleVariableOptions {
                Name = "ami",
                Options = new [] { "ami-0", "ami-1", "ami-2" },
                Type = "string"
            }, new NoCodeModuleVariableOptions {
                Name = "region",
                Options = new [] { "us-east-1", "us-east-2", "us-west-1" },
                Type = "string"
            } }
        });
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeNoCodeModuleFoobar.OverrideLogicalId("foobar");
    }
}
```

## Argument Reference

The following arguments are supported:

- `Name` - (Required) Name of the variable set.
- `Organization` - (Optional) Name of the organization. If omitted, organization must be defined in the provider config.
- `RegistryModule` - (Required) The ID of the registry module to associate with the no code module.
- `Enabled` - (Required) Whether or not no-code module is enabled for the associated registry module
- `VersionPin` - (Optional) The version of the module to pin to.
- `VariableOptions` - (Optional) A list of variable options to associate with the no code module.
  - `Name` - (Required) The name of the variable option.
  - `Type` - (Required) The type of the variable option.
  - `Options` - (Required) A list of options for the variable option.

## Attributes Reference

- `Id` - The ID of the no code module.

## Import

No-code modules can be imported; use `<NO CODE MODULE ID>` as the import ID. For example:

```shell
terraform import tfe_no_code_module.test nocode-qV9JnKRkmtMa4zcA
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-1204d286dd93ad6b8890ea46ff233ae490bae459320c56bddd6dbe876dc0cdb5 -->