---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_team_organization_member"
description: |-
  Add or remove a user from a team.
---

# tfe_team_organization_member

Add or remove a team member using a
[tfe_organization_membership](organization_membership.html).

~> **NOTE** on managing team memberships: Terraform currently provides four
resources for managing team memberships. This - along with [tfe_organization_membership](organization_membership.html) - is the preferred method as it
allows you to add members to a team by email addresses. The [tfe_team_organization_member](team_organization_member.html) is used to manage a single team membership whereas [tfe_team_organization_members](team_organization_members.html) is used to manage all team memberships at once. All four resources cannot be used for the same team simultaneously.

~> **NOTE:** This resource requires using the provider with Terraform Cloud or
an instance of Terraform Enterprise at least as recent as v202004-1.

## Example Usage

Basic usage:

```csharp
using Constructs;
using HashiCorp.Cdktf;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
using Gen.Providers.Tfe;
class MyConvertedCode : TerraformStack
{
    public MyConvertedCode(Construct scope, string name) : base(scope, name)
    {
        var tfeOrganizationMembershipTest =
        new OrganizationMembership.OrganizationMembership(this, "test", new OrganizationMembershipConfig {
            Email = "example@hashicorp.com",
            Organization = "my-org-name"
        });
        var tfeTeamTest = new Team.Team(this, "test_1", new TeamConfig {
            Name = "my-team-name",
            Organization = "my-org-name"
        });
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeTeamTest.OverrideLogicalId("test");
        var tfeTeamOrganizationMemberTest =
        new TeamOrganizationMember.TeamOrganizationMember(this, "test_2", new TeamOrganizationMemberConfig {
            OrganizationMembershipId = Token.AsString(tfeOrganizationMembershipTest.Id),
            TeamId = Token.AsString(tfeTeamTest.Id)
        });
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeTeamOrganizationMemberTest.OverrideLogicalId("test");
    }
}
```

## Argument Reference

The following arguments are supported:

* `TeamId` - (Required) ID of the team.
* `OrganizationMembershipId` - (Required) ID of the organization membership.

## Import

A team member can be imported; use `<TEAM ID>/<ORGANIZATION MEMBERSHIP ID>` or `<ORGANIZATION NAME>/<USER EMAIL>/<TEAM NAME>`
as the import ID. For example:

```shell
terraform import tfe_team_organization_member.test team-47qC3LmA47piVan7/ou-2342390sdf0jj
```
or
```shell
terraform import tfe_team_organization_member.test my-org-name/user@company.com/my-team-name
```
~> **NOTE:** The `<ORGANIZATION NAME>/<USER EMAIL>/<TEAM NAME>` import ID format cannot be used if there are `/` characters in the user's email. These users must be imported with the `<TEAM ID>/<ORGANIZATION MEMBERSHIP ID>` format instead  
<!-- cache-key: cdktf-0.17.0-pre.15 input-79b344f877a555a61065eab94c46b681486e65f04ba2f5566ba29c46f6b98be9 -->