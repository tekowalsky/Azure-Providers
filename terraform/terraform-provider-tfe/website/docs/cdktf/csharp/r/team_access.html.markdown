---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_team_access"
description: |-
  Associate a team to permissions on a workspace.
---

# tfe_team_access

Associate a team to permissions on a workspace.

## Example Usage

Basic usage:

```csharp
using Constructs;
using HashiCorp.Cdktf;
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
using Gen.Providers.Tfe;
class MyConvertedCode : TerraformStack
{
    public MyConvertedCode(Construct scope, string name) : base(scope, name)
    {
        var tfeTeamTest = new Team.Team(this, "test", new TeamConfig {
            Name = "my-team-name",
            Organization = "my-org-name"
        });
        var tfeWorkspaceTest = new Workspace.Workspace(this, "test_1", new WorkspaceConfig {
            Name = "my-workspace-name",
            Organization = "my-org-name"
        });
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeWorkspaceTest.OverrideLogicalId("test");
        var tfeTeamAccessTest = new TeamAccess.TeamAccess(this, "test_2", new TeamAccessConfig {
            Access = "read",
            TeamId = Token.AsString(tfeTeamTest.Id),
            WorkspaceId = Token.AsString(tfeWorkspaceTest.Id)
        });
        /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
        tfeTeamAccessTest.OverrideLogicalId("test");
    }
}
```

## Argument Reference

The following arguments are supported:

* `TeamId` - (Required) ID of the team to add to the workspace.
* `WorkspaceId` - (Required) ID of the workspace to which the team will be added.
* `Access` - (Optional) Type of fixed access to grant. Valid values are `Admin`, `Read`, `Plan`, or `Write`. To use `Custom` permissions, use a `Permissions` block instead. This value _must not_ be provided if `Permissions` is provided.
* `Permissions` - (Optional) Permissions to grant using [custom workspace permissions](https://developer.hashicorp.com/terraform/cloud-docs/users-teams-organizations/permissions#custom-workspace-permissions). This value _must not_ be provided if `Access` is provided.

The `Permissions` block supports:

* `Runs` - (Required) The permission to grant the team on the workspace's runs. Valid values are `Read`, `Plan`, or `Apply`.
* `Variables` - (Required) The permission to grant the team on the workspace's variables. Valid values are `None`, `Read`, or `Write`.
* `StateVersions` - (Required) The permission to grant the team on the workspace's state versions. Valid values are `None`, `Read`, `ReadOutputs`, or `Write`.
* `SentinelMocks` - (Required) The permission to grant the team on the workspace's generated Sentinel mocks, Valid values are `None` or `Read`.
* `WorkspaceLocking` - (Required) Boolean determining whether or not to grant the team permission to manually lock/unlock the workspace.
* `RunTasks` - (Required) Boolean determining whether or not to grant the team permission to manage workspace run tasks.

-> **Note:** At least one of `Access` or `Permissions` _must_ be provided, but not both. Whichever is omitted will automatically reflect the state of the other.

## Attributes Reference

* `Id` The team access ID.

## Import

Team accesses can be imported; use
`<ORGANIZATION NAME>/<WORKSPACE NAME>/<TEAM ACCESS ID>` as the import ID. For
example:

```shell
terraform import tfe_team_access.test my-org-name/my-workspace-name/tws-8S5wnRbRpogw6apb
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-1f416915697c1b047d62f590ef6bc829e7f2a7f58be51029af4020952110b5d6 -->