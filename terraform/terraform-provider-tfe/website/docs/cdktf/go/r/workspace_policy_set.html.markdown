---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_workspace_policy_set"
description: |-
  Add a policy set to a workspace
---

# tfe_workspace_policy_set

Adds and removes policy sets from a workspace

-> **Note:** `TfePolicySet` has an argument `WorkspaceIds` that should not be used alongside this resource. They attempt to manage the same attachments.

## Example Usage

Basic usage:

```go
import constructs "github.com/aws/constructs-go/constructs"
import "github.com/hashicorp/terraform-cdk-go/cdktf"
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import "github.com/aws-samples/dummy/gen/providers/tfe/organization"
import "github.com/aws-samples/dummy/gen/providers/tfe/policySet"
import "github.com/aws-samples/dummy/gen/providers/tfe/workspace"
import "github.com/aws-samples/dummy/gen/providers/tfe/workspacePolicySet"
type myConvertedCode struct {
	terraformStack
}

func newMyConvertedCode(scope construct, name *string) *myConvertedCode {
	this := &myConvertedCode{}
	cdktf.NewTerraformStack_Override(this, scope, name)
	tfeOrganizationTest := organization.NewOrganization(this, jsii.String("test"), &organizationConfig{
		email: jsii.String("admin@company.com"),
		name: jsii.String("my-org-name"),
	})
	tfePolicySetTest := policySet.NewPolicySet(this, jsii.String("test_1"), &policySetConfig{
		description: jsii.String("Some description."),
		name: jsii.String("my-policy-set"),
		organization: cdktf.*token_AsString(tfeOrganizationTest.name),
	})
	/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
	tfePolicySetTest.OverrideLogicalId(jsii.String("test"))
	tfeWorkspaceTest := workspace.NewWorkspace(this, jsii.String("test_2"), &workspaceConfig{
		name: jsii.String("my-workspace-name"),
		organization: cdktf.*token_*AsString(tfeOrganizationTest.name),
	})
	/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
	tfeWorkspaceTest.OverrideLogicalId(jsii.String("test"))
	tfeWorkspacePolicySetTest :=
	workspacePolicySet.NewWorkspacePolicySet(this, jsii.String("test_3"), &workspacePolicySetConfig{
		policySetId: cdktf.*token_*AsString(tfePolicySetTest.id),
		workspaceId: cdktf.*token_*AsString(tfeWorkspaceTest.id),
	})
	/*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
	tfeWorkspacePolicySetTest.OverrideLogicalId(jsii.String("test"))
	return this
}
```

## Argument Reference

The following arguments are supported:

* `PolicySetId` - (Required) ID of the policy set.
* `WorkspaceId` - (Required) Workspace ID to add the policy set to.

## Attributes Reference

* `Id` - The ID of the policy set attachment. ID format: `<workspace-id>_<policy-set-id>`

## Import

Workspace Policy Sets can be imported; use `<ORGANIZATION>/<WORKSPACE NAME>/<POLICY SET NAME>`. For example:

```shell
terraform import tfe_workspace_policy_set.test 'my-org-name/workspace/policy-set-name'
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-063704782b0ed470f47929ea2ae102aff05366cceeb62a7760562407d4442e44 -->